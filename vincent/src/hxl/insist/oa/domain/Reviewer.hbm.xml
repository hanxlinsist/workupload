<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="hxl.insist.oa.domain">

	<class name="Reviewer" table="xlinsist_reviewer">
		<id name="id">
            <generator class="native"/>
		</id>
		<property name="name" />
		<property name="jobNumber" />
		<property name="academy" />
		
		<!-- The column attribute is used to set the column name in the parent table WorkType. -->
		<many-to-one name="project" column="project" class="Project"></many-to-one>
		
		<!-- 
			The <many-to-one> element is used to set the relationship between Reviwer and Account entities. 
			The name attribute is set to the defined variable in the parent class, in our case it is Account.
			The column attribute is used to set the column name in the parent table Reviwer which is set to unique 
			so that only one Reviwer object can be associated with an Account object.
		 -->
		<many-to-one name="account" column="account" unique="true" class="Account" not-null="true"/>
		
		<!-- 
			The <set> element sets the relationship between Reviewer and Opus classes.
			We set cascade attribute to save-update to tell Hibernate to persist the Opus objects for SAVE i.e. 
			CREATE and UPDATE operations at the same time as the Reviewer objects. 
			The name attribute is set to the defined Set variable in the parent class, in our case it is Opus.
			For each set variable, we need to define a separate set element in the mapping file. 
			Here we used name attribute to set the intermediate table name to reviewer_opus.
		 -->
		<set name="works" cascade="save-update" table="reviewer_opus">
	         <key column="reviewer_id"/>
	         <many-to-many column="opus_id" class="Opus"/>
      	</set>
		
	</class>
	
</hibernate-mapping>
